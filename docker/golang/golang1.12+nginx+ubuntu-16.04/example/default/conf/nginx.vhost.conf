#
# Main.go
#   Used to test different GO reverse proxy configurations.
#
# @source: https://gist.github.com/hgfischer/7965620
#
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

upstream proxy_http {
    server 127.0.0.1:9000 max_fails=3 fail_timeout=10 fail_timeout=30s;
    keepalive 32;
}

upstream proxy_fcgi_tcp {
    server 127.0.0.1:9001 max_fails=3 fail_timeout=10 fail_timeout=30s;
    keepalive 32;
}

upstream proxy_fcgi_socket {
    server unix:/tmp/go.sock;
    keepalive 300;
}

#
# Go :: HTTP
#
server {
    listen 8000 default_server;
    server_name _ go.http;
    keepalive_timeout 5;
    client_max_body_size 50m;
    charset utf-8;
    error_log /dev/stdout;
    access_log /dev/stdout;

    location / {
        proxy_pass http://proxy_http;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarder-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

#
# Go :: Fast CGI :: TCP
#
server {
    listen 8001 default_server;
    server_name _ go.fcgi.tcp;
    keepalive_timeout 5;
    client_max_body_size 50m;
    charset utf-8;
    error_log /dev/stdout;
    access_log /dev/stdout;

    location / {
        include fastcgi_params;
        fastcgi_keep_conn on;
        fastcgi_pass proxy_fcgi_tcp;
        fastcgi_param HTTPS off;
    }
}

#
# Go :: Fast CGI :: Unix Socket
#
server {
    listen 8002 default_server;
    server_name _ go.fcgi.unix;
    keepalive_timeout 5;
    client_max_body_size 50m;
    charset utf-8;
    error_log /dev/stdout;
    access_log /dev/stdout;

    location / {
        include fastcgi_params;
        fastcgi_keep_conn on;
        fastcgi_pass proxy_fcgi_socket;
        fastcgi_param HTTPS off;
    }
}
